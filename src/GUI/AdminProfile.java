/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import CODE.DbConnect;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

public class AdminProfile extends javax.swing.JFrame {

    Connection conn = null;
    public String selectItem;
    
    public AdminProfile() throws SQLException {
        
            initComponents();
            conn= DbConnect.connect();
            Reconnect();
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        eventbox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        evenTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ticketTable = new javax.swing.JTable();
        statusbtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        edit_bttn = new javax.swing.JCheckBoxMenuItem();
        admin_logout_bttn = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        add_event_bttn = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(" Welcome Administrators! ");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 410, 50));

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Find event: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, 20));

        eventbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventboxMouseClicked(evt);
            }
        });
        eventbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventboxActionPerformed(evt);
            }
        });
        jPanel1.add(eventbox, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 590, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Event Status :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        evenTable.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        evenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Event", "Venue", "Time", "About"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(evenTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 930, 60));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ticket Details :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        ticketTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Category (Type)", "Seats", "Available  seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ticketTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 930, 80));

        statusbtn.setBackground(new java.awt.Color(204, 204, 204));
        statusbtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        statusbtn.setText("See Status");
        statusbtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        statusbtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        statusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusbtnActionPerformed(evt);
            }
        });
        jPanel1.add(statusbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 110, 70, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 510));

        jMenu1.setText("My Profile");

        edit_bttn.setSelected(true);
        edit_bttn.setText("Edit info");
        edit_bttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_bttnActionPerformed(evt);
            }
        });
        jMenu1.add(edit_bttn);

        admin_logout_bttn.setSelected(true);
        admin_logout_bttn.setText("Logout");
        admin_logout_bttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_logout_bttnActionPerformed(evt);
            }
        });
        jMenu1.add(admin_logout_bttn);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Event Task");

        add_event_bttn.setSelected(true);
        add_event_bttn.setText("Add/ Edit events");
        add_event_bttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_event_bttnActionPerformed(evt);
            }
        });
        jMenu2.add(add_event_bttn);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void eventboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventboxActionPerformed

    }//GEN-LAST:event_eventboxActionPerformed

    private void statusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusbtnActionPerformed
        try {
            showEvent(selectItem);
            showTickets(selectItem);
        } catch (SQLException ex) {
           Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, ex);

        }
        
        
        
    }//GEN-LAST:event_statusbtnActionPerformed

    private void edit_bttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_bttnActionPerformed
        try {
            // TODO add your handling code here:
            UpdateAdminInfo admin = new UpdateAdminInfo();
            admin.setVisible(true);
            this.dispose();
        } catch (SQLException e) {
            Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_edit_bttnActionPerformed

    private void admin_logout_bttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_logout_bttnActionPerformed
        try {
            // TODO add your handling code here:
            Login admin_logout = new Login();
            admin_logout.setVisible(true);
            this.dispose();
        } catch (SQLException e) {
            Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, e);

        }
    }//GEN-LAST:event_admin_logout_bttnActionPerformed

    private void add_event_bttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_event_bttnActionPerformed
        try {
            // TODO add your handling code here:
            EventManage admin_event = new EventManage();
            admin_event.setVisible(true);
            this.dispose();
        } catch (SQLException ex) {
            Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_add_event_bttnActionPerformed

    private void eventboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventboxMouseClicked
        // TODO add your handling code here:
        try{
        String sql_eventBox = "SELECT event_name FROM event_table";
            PreparedStatement add = conn.prepareStatement(sql_eventBox);
            ResultSet rs = add.executeQuery();
        
        while(rs.next()){
            String name = rs.getString("event_name");
            eventbox.addItem(name);
            
        }
        Object sObj = eventbox.getSelectedItem();
        if (sObj != null){
            if(sObj instanceof String ){
               this.selectItem = (String)sObj;
            }
        }
        
        }catch(SQLException e){
            Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, e);
        
        }
        
    }//GEN-LAST:event_eventboxMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminProfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new AdminProfile().setVisible(true);
                } catch (SQLException ex) {
                      Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, ex);

                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem add_event_bttn;
    private javax.swing.JCheckBoxMenuItem admin_logout_bttn;
    private javax.swing.JCheckBoxMenuItem edit_bttn;
    private javax.swing.JTable evenTable;
    private javax.swing.JComboBox<String> eventbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton statusbtn;
    private javax.swing.JTable ticketTable;
    // End of variables declaration//GEN-END:variables
private void Reconnect() throws SQLException{
    if (this.conn == null || this.conn.isClosed()) {
        try {
            // Re-establish the connection
            String jdbcUrl = "jdbc:mysql://localhost:3306/event_reservation";
            String username = "root";
            String db_password = null;
            this.conn = DriverManager.getConnection(jdbcUrl, username, db_password);
        } catch (SQLException ex) {
            Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
private void showEvent(String name ) throws SQLException {
        
        try {
            // TODO add your handling code here:
            String sql_A = "SELECT * FROM event_table where event_name=?";
            PreparedStatement add = conn.prepareStatement(sql_A);
            add.setString(1, name);
            ResultSet rs = add.executeQuery();
            
            DefaultTableModel tableModel = (DefaultTableModel)evenTable.getModel();
            
            while(rs.next()){
            String event = rs.getString("event_Name");
            String venue = rs.getString("venue");
            String time = rs.getString("date");
            String about = rs.getString("about");
            
            tableModel.addRow(new Object[]{event,venue, time, about});}
        } catch (SQLException ex) {
            Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
private void showTickets(String name) throws SQLException {
        try {
            // TODO add your handling code here:
            String sql_B = "SELECT s.seat_category, s.NoOf_seats, s.available_seats FROM seats s JOIN event_table e ON s.event_ID = e.event_ID WHERE e.event_name=?";
            PreparedStatement add = conn.prepareStatement(sql_B);
            add.setString(1, name);
            ResultSet rs = add.executeQuery();
            
            DefaultTableModel tblTicketModel = (DefaultTableModel)ticketTable.getModel();
            while(rs.next()){
            String type = rs.getString("seat_category");
            int seats = rs.getInt("NoOf_seats");
            int available_seats = rs.getInt("available_setas");
            Object[] ticketDetails = {type,seats,available_seats};
            
            tblTicketModel.addRow(ticketDetails);}

        } catch (SQLException ex) {
            Logger.getLogger(AddTickets.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
